
#sum of two lowest positive integers



# #შევქმენით ფუნქცია სახელად sum_two_smallest_numbers რომელსაც პარამეტრად გადავეცით numbers სადაც შემოგვდის სია
# def sum_two_smallest_numbers(numbers):

    #შევქმენით ახალი ცვლადი სადაც გამოვიდა დალაგებული სია რომელიც დალაგდა sorted მეთოდის გამოყენებით
    # x = sorted(numbers)

    #გავაკეთეთ min1 ცვლადი  სადაც დალაგებულ სიაში მე0 ინდექსზე მყოფ ელემენტს ვიძახებთ (ანუ დალაგებულ სიაში პირველ ყველაზე მცირე რიცხვს)
    # min1 = x[0]

    #გავაკეთეთ min2 ცვლადი სადაც დალაგებულ სიაში მე1 ინდექსე მყოფ ელემენტს ვიძახებთ (ანუ დალაგებულ სიაში მეორე ყველაზე მცირე რიცხვს)
    # min2 = x[1]


    #შემდეგ დვაბრუნეთ ჯამი ამ უმცირესი რიცხვების
    # return min1 + min2





#maximum multiple


# შევქმენით ფუნქცია სახელად max_multiple რომელსაც გადავეცით ორი პარამეტრი divisor და bound
# def max_multiple(divisor, bound):

    #შევქმენით ახალი ცარიელი  სია სახელად new_list
    # new_list = []


    #for ციკლი გამოყენებით გავაკეთეთ დიაპაზონი bound ში შემავალი რიცხვის ჩათვლით
    # for num in range(bound + 1):

        #თუ რომელიმე დიაპაზონში შემავალი რიცხვის გამყოფზე გაყოიფს შედეგად ნაშთი  იქნება0 ვამატებთ ახალ სიაში მოცემულ რიცხვს 
        # if num % divisor == 0:
        #     new_list.append(num)

    #ბოლოს კი სიაში დამატებული რიცხვებიდან ვაბრუნებთ მაქსიმალურ მნიშვნელობას
    # return max(new_list)






#Javascript array filter



#შევქმენით ფუნქცია სახელად get_even_numbers რომელსაც გადავეცით პარამეტრად მასივი სახელად arr
# def get_even_numbers(arr):

    #შევქმენი ახალი ცარიელი სია სახელად new_list
    # new_list = []
    

    #for ციკლის გამოყენებით გადავუარეთ მასივს
    # for i in arr:

        # თუ საიტერაციო ცვლადი i იყოფა 2ზე და ნაშთი არის ნული ანუ თუ i ლუწია მაშინ ახალ ცარიელ სიაში ვამატებთ ამ რიცხვს
        # if i % 2 ==0:
            # new_list.append(i)
    
    #ბოლოს კი ვაბრუნებთ ახალ სიას
    # return new_list







#Check the exam




#შევქმენით ფუნქცია სახელად check_exam რომელსაც გადავეცით პარამეტრად მასივები arr1 და arr2
# def check_exam(arr1,arr2):

    #შევქმენით ცვლადი სადაც ინახება მოსწავლის ქულები თუ პასუხი სწორი იყო ემატება 4 ქულა თუ არასწორი იყო აკლდება 1 ქულა ხოლო თუ ცარიელი იყო პასუხი ემატება 0 ქულა

    # res = 0
    
    # for ციკლის საშუალებით გავაკეთეთ დიაპაზონი 0 სა და arr1 ის მასივის ელემენტების რაოდენობას შორის არ აქვს მნიშვნელობა თუ რომელ მასივს ავიღებთ,ორივე მასივში ერთნაირი რაოდენობის ელემენტები გვაქვს 
    # for i in range(len(arr1)):

        # თუ მასივების ინდექსებზე მდგომი ელემენტები ერთნაირია მაშინ  res ცვლადს დავუმატოთ 4 ქულა რადგან პასუხი სწორია
        # if arr1[i] == arr2[i]:
        #     res += 4

        # თუ მაგალითად მოსწავლის მიერ შეყვანილი პასუხი იქნება ცარიელი მაშინ მოსწავლეს ემატება 0ქულა
        # elif arr2[i] == "":
        #     res += 0 
        #ხოლო სხვა შემთხვევაში თუ არ ემთხვევა სწორი პასუხი და მოსწავლის მიერ შეყვანილი პასუხი ერთმანეთს,ანუ პასუხი არასწორია და მოსწავლეს აკლდება 1 ქულა
        # elif arr1[i] != arr2[i]:
        #     res -= 1
        
    #თუ ქულა უარყოფითი რიცხვი გამოდის მაშინ ვაბრუნებთ 0 ხოლო თუ დადებითი რიცხვია ვაბრუნებთ იმ ქულას რასაც მიიღებს მოსწავლე
        
    # return 0 if res < 0 else res






# Row weights




#  შევქმენით ფუნქცია სახელად row_weights რომელსაც პარამეტრად გადავეცით მასივი
# def row_weights(array):

    #გავაკეთეთ 2 ახალი ცარიელი სია სახელად res_list და new_list  
    # res_list = []
    # new_list = []
    


    # for ციკლის საშულებით გავაკეთეთ დიაპაზონი 0 სა და მასივის ელემენტების რაოდენობას შორის
    # for index in range(len(array)):
        
        #თუ  საიტერაციო ცვლადი index ლუწია მაშინ res_list სიაში ვამატებთ მასივში ამ ინდექსზე მყოფ ელემენტს
        # if index % 2 == 0:
        #     res_list.append(array[index])

        #სხვა შემთხვევაში new_list სიაში ვამატებთ კენტ ინდექსზე მყოფ მასივის ელემენს
        # else:
        #     new_list.append(array[index])
    
     #შემდეგ ვაბრუნებთ ჯამს ორივე სიის   
    # return sum(res_list),sum(new_list)










